name: CI/CD Pipeline

on:
  push:
    branches: [main, "dev/**"]
  pull_request:
    branches: [main]
  release:
    types: [published]

jobs:
  lint-and-type-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          python-version: "3.9"
          version: "0.8.22"
          enable-cache: true

      - name: Install dependencies
        run: |
          uv sync --locked --dev

      - name: Run ruff check
        run: uv run ruff check .

      - name: Run ruff format check
        run: uv run ruff format --check .

      - name: Run mypy
        run: uv run mypy src/

  test:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
      - uses: actions/checkout@v5

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable
        with:
          toolchain: stable

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ matrix.python-version }}
          version: "0.8.22"
          enable-cache: true

      - name: Install dependencies
        run: |
          uv sync --locked --dev

      - name: Run tests
        run: uv run pytest tests/ -n auto

  deploy:
    needs: [lint-and-type-check, test]
    if: github.event_name == 'release' || github.ref == 'refs/heads/main'
    environment: pypi
    permissions:
      id-token: write
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v5

      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          python-version: "3.9"
          version: "0.8.22"
          enable-cache: true

      - name: Build wheel and sdist
        run: |
          uv build

      - name: Publish to PyPI
        if: github.event_name == 'release'
        run: uv publish
